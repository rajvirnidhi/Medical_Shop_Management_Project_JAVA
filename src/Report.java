
import Project.ConnectionProvider;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.PieSectionLabelGenerator;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Nidhi Rajvir
 */
public class Report extends javax.swing.JFrame {

    /**
     * Creates new form Report
     */
    ArrayList<String> med_name = new ArrayList<String>();
    ArrayList<Integer> availqty = new ArrayList<Integer>();
    int size=0;
    int qty[];
    
    public Report() {
        initComponents();
        Database();
        
        try
        {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("SELECT * FROM place_order;");
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            
            Statement st1=con.createStatement();
            ResultSet rs1=st1.executeQuery("SELECT * FROM stock;");
            jTable2.setModel(DbUtils.resultSetToTableModel(rs1));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Connection error");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton_piechart = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton_close = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton_bargraph = new javax.swing.JButton();
        jButton_piechart1 = new javax.swing.JButton();
        jButton_bargraph1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(600, 250));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "medicine", "price", "quantity", "total", "batchno", "customer_name", "contactno", "city"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 75, 826, 95));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 344, 826, 95));

        jButton_piechart.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_piechart.setText("Pie Chart");
        jButton_piechart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_piechartActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_piechart, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 188, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("STOCK DATA");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 287, -1, -1));

        jButton_close.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/Close.png"))); // NOI18N
        jButton_close.setText("Close");
        jButton_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_closeActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_close, new org.netbeans.lib.awtextra.AbsoluteConstraints(745, 508, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setText("ORDERS DATA");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 23, -1, -1));

        jButton_bargraph.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_bargraph.setText("Bar Graph");
        jButton_bargraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_bargraphActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_bargraph, new org.netbeans.lib.awtextra.AbsoluteConstraints(489, 188, -1, -1));

        jButton_piechart1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_piechart1.setText("Pie Chart");
        jButton_piechart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_piechart1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_piechart1, new org.netbeans.lib.awtextra.AbsoluteConstraints(259, 457, -1, -1));

        jButton_bargraph1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_bargraph1.setText("Bar Graph");
        jButton_bargraph1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_bargraph1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_bargraph1, new org.netbeans.lib.awtextra.AbsoluteConstraints(488, 457, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/bkg850.jpg"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void Database()
    {
        try
        {
            String sql="select * from stock";
            Connection con=ConnectionProvider.getCon();
            PreparedStatement pst=con.prepareStatement(sql);
            ResultSet rs=pst.executeQuery();
            
            while(rs.next())
            {
                String name=rs.getString("product_name");
                med_name.add(name);
                int qty=rs.getInt("quantity");
                availqty.add(qty);
            }
            size=med_name.size();
            String name[]=new String[size];
            qty=new int[size];
            
            int sold_qty=0;
            PreparedStatement pst1=con.prepareStatement("select * from place_order where medicine=?");
            
            for(int i=0;i<size;i++)
            {
                pst1.setString(1,med_name.get(i));
                ResultSet rs1=pst1.executeQuery();
                while(rs1.next())
                {
                    sold_qty+=rs1.getInt("quantity");
                    System.out.println(rs1.getInt("quantity"));
                }
                qty[i]=sold_qty;
                sold_qty=0;
            }
            
            for(int i=0;i<size;i++)
            {
                System.out.println(med_name.get(i)+" "+qty[i]);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e+"\nNot connected!");
        }
    }
    
    
    private void jButton_piechartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_piechartActionPerformed
        // TODO add your handling code here:
        try
        {
            DefaultPieDataset pieDataset = new DefaultPieDataset();
            for(int i=0;i<size;i++)
            {
                pieDataset.setValue(med_name.get(i),qty[i]);
            }
            JFreeChart chart = ChartFactory.createPieChart("Pie Chart for products sold", pieDataset, true, true, true);
            
            PiePlot p=(PiePlot)chart.getPlot();
            PieSectionLabelGenerator gen = new StandardPieSectionLabelGenerator("{0}: {1} ({2})", new DecimalFormat("0"), new DecimalFormat("0%"));
            p.setLabelGenerator(gen);
            ChartFrame frame=new ChartFrame("Pie Chart",chart);
            frame.setVisible(true);
            frame.setSize(900,900);
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e+"\nNot connected!");
        }
    }//GEN-LAST:event_jButton_piechartActionPerformed

    private void jButton_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_closeActionPerformed
        // TODO add your handling code here:
        //close the form
        setVisible(false);
    }//GEN-LAST:event_jButton_closeActionPerformed

    private void jButton_bargraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_bargraphActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for(int i=0;i<size;i++)
        {
            dataset.setValue(qty[i],"Quantity",med_name.get(i));
        }
        JFreeChart chart=ChartFactory.createBarChart3D("Bar Chart for products sold", "Medicine name", "Sold Quantity", dataset, PlotOrientation.VERTICAL, false, true, false);
        chart.setBackgroundPaint(Color.WHITE);
        
        CategoryPlot p=chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLACK);
        ChartFrame frame = new ChartFrame("Bar Chart",chart);
        frame.setVisible(true);
        frame.setSize(900,800);
    }//GEN-LAST:event_jButton_bargraphActionPerformed

    private void jButton_piechart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_piechart1ActionPerformed
        // TODO add your handling code here:
        try
        {
            DefaultPieDataset pieDataset = new DefaultPieDataset();
            for(int i=0;i<size;i++)
            {
                pieDataset.setValue(med_name.get(i),availqty.get(i));
            }
            JFreeChart chart = ChartFactory.createPieChart("Pie Chart for available stock", pieDataset, true, true, true);
            
            PiePlot p=(PiePlot)chart.getPlot();
            PieSectionLabelGenerator gen = new StandardPieSectionLabelGenerator("{0}: {1} ({2})", new DecimalFormat("0"), new DecimalFormat("0%"));
            p.setLabelGenerator(gen);
            ChartFrame frame=new ChartFrame("Pie Chart",chart);
            frame.setVisible(true);
            frame.setSize(900,900);
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e+"\nNot connected!");
        }
    }//GEN-LAST:event_jButton_piechart1ActionPerformed

    private void jButton_bargraph1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_bargraph1ActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for(int i=0;i<size;i++)
        {
            dataset.setValue(availqty.get(i),"Available Quantity",med_name.get(i));
        }
        JFreeChart chart=ChartFactory.createBarChart3D("Bar Chart for available stock", "Medicine name", "Available Quantity", dataset, PlotOrientation.VERTICAL, false, true, false);
        chart.setBackgroundPaint(Color.WHITE);
        
        CategoryPlot p=chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLACK);
        ChartFrame frame = new ChartFrame("Bar Chart",chart);
        frame.setVisible(true);
        frame.setSize(900,800);
    }//GEN-LAST:event_jButton_bargraph1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_bargraph;
    private javax.swing.JButton jButton_bargraph1;
    private javax.swing.JButton jButton_close;
    private javax.swing.JButton jButton_piechart;
    private javax.swing.JButton jButton_piechart1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
